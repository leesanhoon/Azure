version: "3.8"

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: enterprise-auth-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - enterprise-auth-network
    restart: unless-stopped

  # Enterprise Auth API
  enterprise-auth-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: enterprise-auth-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=EnterpriseAuthDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true;
      - JwtSettings__Secret=EnterpriseAuth-SuperSecretKey-ForJWT-MustBe256BitsLong-ChangeInProduction123456789
      - JwtSettings__Issuer=EnterpriseAuth.API
      - JwtSettings__Audience=EnterpriseAuth.Client
      - JwtSettings__AccessTokenExpirationMinutes=15
      - JwtSettings__RefreshTokenExpirationDays=7
    ports:
      - "8080:80"
    depends_on:
      - sqlserver
    networks:
      - enterprise-auth-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: enterprise-auth-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - enterprise-auth-api
    networks:
      - enterprise-auth-network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  enterprise-auth-network:
    driver: bridge
